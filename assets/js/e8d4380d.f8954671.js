"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2890],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),h=i,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1368:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],c={},s="Miscellaneous",l={unversionedId:"authenticate/misc",id:"authenticate/misc",isDocsHomePage:!1,title:"Miscellaneous",description:"Binding to Privileged Ports",source:"@site/docs/authenticate/90-misc.md",sourceDirName:"authenticate",slug:"/authenticate/misc",permalink:"/docs/authenticate/misc",editUrl:"https://github.com/authp/authp.github.io/edit/main/docs/authenticate/90-misc.md",tags:[],version:"current",sidebarPosition:90,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"X.509 Configuration",permalink:"/docs/authenticate/x509/x509"},next:{title:"Plugin Overview",permalink:"/docs/authorize/intro"}},u=[{value:"Binding to Privileged Ports",id:"binding-to-privileged-ports",children:[],level:2},{value:"Recording Source IP Address in JWT Token",id:"recording-source-ip-address-in-jwt-token",children:[],level:2},{value:"Session ID Cache",id:"session-id-cache",children:[],level:2},{value:"Shortcuts",id:"shortcuts",children:[],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"miscellaneous"},"Miscellaneous"),(0,a.kt)("h2",{id:"binding-to-privileged-ports"},"Binding to Privileged Ports"),(0,a.kt)("p",null,"It may be necessary to bind Caddy to privileged port, e.g. 80 or 443.\nGrant the ",(0,a.kt)("inlineCode",{parentName:"p"},"cap_net_bind_service")," capability to the Caddy binary, e.g.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop gatekeeper\nsudo rm -rf /usr/local/bin/gatekeeper\nsudo cp bin/caddy /usr/local/bin/gatekeeper\nsudo setcap cap_net_bind_service=+ep /usr/local/bin/gatekeeper\nsudo systemctl start gatekeeper\n")),(0,a.kt)("h2",{id:"recording-source-ip-address-in-jwt-token"},"Recording Source IP Address in JWT Token"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"enable source ip tracking")," Caddyfile directive instructs\nthe plugin to record the source IP address when issuing claims."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"localhost {\n  route /auth* {\n    authp {\n      ...\n      enable source ip tracking\n      ...\n")),(0,a.kt)("p",null,"This could be useful to force re-authentication when the client IP\naddress changes."),(0,a.kt)("h2",{id:"session-id-cache"},"Session ID Cache"),(0,a.kt)("p",null,"When the plugin issues JWT tokens, it either passes ",(0,a.kt)("inlineCode",{parentName:"p"},"jti")," values\nfrom upstream providers or generates its own ",(0,a.kt)("inlineCode",{parentName:"p"},"jti")," values."),(0,a.kt)("p",null,"The plugin stores the mappings between ",(0,a.kt)("inlineCode",{parentName:"p"},"jti")," value and associated\ndata in a cache. The associated data contains claims and the\nmetadata from the backend which authenticated a particular session."),(0,a.kt)("p",null,"This cache is used to assess whether a claim holder is able using\ncertain portal's capabilities, e.g. add public SSH/GPG key, configure\nMFA tokens, change password, etc."),(0,a.kt)("h2",{id:"shortcuts"},"Shortcuts"),(0,a.kt)("p",null,"The following Caddyfile shortcuts could be used to configure local, OAuth 2.0\nbackends:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"backend local <path> <realm>\nbackend google <client_id> <client_secret>\nbackend github <client_id> <client_secret>\nbackend facebook <client_id> <client_secret>\n")))}p.isMDXComponent=!0}}]);