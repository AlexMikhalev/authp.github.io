"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3930],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},s=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),h=r,m=s["".concat(p,".").concat(h)]||s[h]||d[h]||a;return n?i.createElement(m,o(o({ref:t},u),{},{components:n})):i.createElement(m,o({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7022:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:8},o="Auto-Redirect URL",l={unversionedId:"authorize/auto-redirect-url",id:"authorize/auto-redirect-url",title:"Auto-Redirect URL",description:"HTTP Redirect",source:"@site/docs/authorize/auto-redirect-url.md",sourceDirName:"authorize",slug:"/authorize/auto-redirect-url",permalink:"/docs/authorize/auto-redirect-url",draft:!1,editUrl:"https://github.com/authp/authp.github.io/edit/main/docs/authorize/auto-redirect-url.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Token Verification",permalink:"/docs/authorize/token-verification"},next:{title:"Access Lists and Role-based Access Control (RBAC)",permalink:"/docs/authorize/acl-rbac"}},p={},c=[{value:"HTTP Redirect",id:"http-redirect",level:2},{value:"Javascript Redirect",id:"javascript-redirect",level:2},{value:"Login Hint",id:"login-hint",level:2},{value:"Configuration Example",id:"configuration-example",level:3},{value:"Additional scopes",id:"additional-scopes",level:2},{value:"Configuration Example",id:"configuration-example-1",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"auto-redirect-url"},"Auto-Redirect URL"),(0,r.kt)("h2",{id:"http-redirect"},"HTTP Redirect"),(0,r.kt)("p",null,"Consider the following configuration snippet. When the JWT plugin detects\nunauthenticated user, it forwards the user to ",(0,r.kt)("inlineCode",{parentName:"p"},"https://auth.example.com"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  security {\n    authorization policy mypolicy {\n      set auth url https://auth.example.com/auth\n    }\n  }\n}\n")),(0,r.kt)("p",null,"By default, the plugin adds the ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect_url")," parameter in URL query\npointing back to the page where the plugin detected unauthenticated user.\nIt signals an authenticator to redirect where to redirect the user upon\nsuccessful authentication."),(0,r.kt)("p",null,"If you would like to disable the addition of ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect_url"),", please\nadd ",(0,r.kt)("inlineCode",{parentName:"p"},"disable auth redirect query"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  security {\n    authorization policy mypolicy {\n      set auth url https://auth.example.com/auth\n      disable auth redirect query\n    }\n  }\n}\n")),(0,r.kt)("p",null,"If you would like to change the parameter name, e.g. from ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect_url"),"\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"referer_url"),", use the ",(0,r.kt)("inlineCode",{parentName:"p"},"set redirect query parameter")," Caddyfile directive."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  security {\n    authorization policy mypolicy {\n      set redirect query parameter referer_url\n    }\n  }\n}\n")),(0,r.kt)("p",null,"The following Caddyfile directive changes the status code (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"302"),") for\nthe redirects."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  security {\n    authorization policy mypolicy {\n      set redirect status 307\n    }\n  }\n}\n")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"authorize")," configuration contains the following directive, then the redirect\nis disabled and the request is refused with a HTTP ",(0,r.kt)("inlineCode",{parentName:"p"},"401 Unauthorized")," error."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  security {\n    authorization policy mypolicy {\n      disable auth redirect\n    }\n  }\n}\n")),(0,r.kt)("p",null,"Importantly, if the plugin finds expired token, it attempts to extract the\ntoken's issuer value. Then, it checks whether the value starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"http"),".\nIf it is, then the ",(0,r.kt)("inlineCode",{parentName:"p"},"set auth url")," will be overwritten with the issuer's\nweb address."),(0,r.kt)("h2",{id:"javascript-redirect"},"Javascript Redirect"),(0,r.kt)("p",null,"The following directive enables Javascript-based redirect. This is useful when\nthe URI path contains pound (",(0,r.kt)("inlineCode",{parentName:"p"},"#"),") sign."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  security {\n    authorization policy mypolicy {\n      enable js redirect\n    }\n  }\n}\n")),(0,r.kt)("h2",{id:"login-hint"},"Login Hint"),(0,r.kt)("p",null,"Login hints are part of the\n",(0,r.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-core-1_0.html#rfc.section.3.1.2.1"},"OpenID Connect specification"),"\nand can be used to notify an Authorization Server about the login identifier\nused by a user (e.g. to pre-fill fields in the login form)."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"enable login hint")," command can be used to forward a login hint to the auth URL by passing it to a protected\nroute as a query parameter. In case the auth URL belongs to a portal defined in the ",(0,r.kt)("inlineCode",{parentName:"p"},"authenticate")," configuration,\nit will be automatically forwarded to the identity provider."),(0,r.kt)("p",null,"By default, the ",(0,r.kt)("inlineCode",{parentName:"p"},"enable login hint")," accepts email addresses, phone numbers and alphanumeric characters. Using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"with")," keyword in combination with one or more of the validator names ",(0,r.kt)("inlineCode",{parentName:"p"},"email"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"phone")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"alphanumeric"),", they can be\ntoggled individually. For example, the command ",(0,r.kt)("inlineCode",{parentName:"p"},"enable login hint with email alphanumeric")," would only forward email\naddresses and alphanumeric strings to the auth URL, but no phone numbers."),(0,r.kt)("h3",{id:"configuration-example"},"Configuration Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  security {\n    authorization policy mypolicy {\n      set auth url https://auth.example.com/auth\n      enable login hint\n    }\n  }\n}\n\n\nmyapp.com {\n        route /protected* {\n                authorize with mypolicy\n                respond "myapp is running"\n        }\n}\n')),(0,r.kt)("p",null,"Given the above configuration, when a user visits ",(0,r.kt)("inlineCode",{parentName:"p"},"https://myapp.com/protected?login_hint=myusername"),",\nthe login hint will be forwarded to the auth URL and therefore the user will be forwarded to the\nfollowing URL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://auth.example.com/auth?login_hint=myusername&redirect_url=https://myapp.com/protected\n")),(0,r.kt)("h2",{id:"additional-scopes"},"Additional scopes"),(0,r.kt)("p",null,"Sometimes it is required to have a basic authorization block configure with the ability to inject scopes, into the OAUTH identity provider, that comes from the client. This would be useful to ask the user different scopes depending on your business logic."),(0,r.kt)("p",null,"This will indicate to the authenticator that will fetch from the request a query parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"additional_scopes"),", and merge the conetnt into the OAUTH identity provider block."),(0,r.kt)("p",null,"If this is enable, the client can make a call like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"myapp.com?additional_scopes=scopeA scope_B\n")),(0,r.kt)("p",null,"The previous example will then merge ",(0,r.kt)("inlineCode",{parentName:"p"},"scopeA scope_B")," into the current scopes configure in the OAUTH block."),(0,r.kt)("h3",{id:"configuration-example-1"},"Configuration Example"),(0,r.kt)("p",null,"The syntax to enable client scopes to be injected into the identity provider follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  security {\n    oauth identity provider customer {\n      realm customerRealm\n      driver generic\n      client_id <THE CLIENT ID>\n      client_secret <THE CLIENT SECRET>\n      base_auth_url <THE BASE AUTHENTICATION URL>\n      scopes openid profile\n    }\n\n    authorization policy mypolicy {\n      set auth url /auth/oauth2/customerRealm\n      enable additional scopes\n    }\n  }\n}\n\nmyapp.com {\n        route /protected* {\n                authorize with mypolicy\n                respond "myapp is running"\n        }\n}\n')))}d.isMDXComponent=!0}}]);